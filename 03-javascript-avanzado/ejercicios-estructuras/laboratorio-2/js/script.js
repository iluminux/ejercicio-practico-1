// ==============================
// üì¶ IMPORTACI√ìN DE DATOS
// ==============================
import { hospital } from './hospitalData.js';

// ==============================
// üåê CONFIGURACI√ìN INICIAL Y EVENTOS
// ==============================
document.addEventListener('DOMContentLoaded', () => {
  const toggle = document.querySelector('.menu-toggle');
  const nav = document.querySelector('.nav');

  toggle?.addEventListener('click', () => {
    nav?.classList.toggle('active');
  });

  // Solo funciones gen√©ricas al cargar
  setTimeout(() => {
    solicitarDatosUsuario();
    mostrarDatosHospital();
  }, 300);
});

// ==============================
// üìã SOLICITUD Y VALIDACI√ìN DE DATOS
// ==============================
function solicitarDatosUsuario() {
  const nombre = prompt("Ingrese su nombre:");
  const email = prompt("Ingrese su correo electr√≥nico:");
  const telefono = prompt("Ingrese su n√∫mero de tel√©fono:");

  if (!email.includes("@") || typeof email !== "string") {
    alert("Correo inv√°lido.");
    console.warn("Validaci√≥n fallida: email incorrecto");
  } else {
    alert(`Hola ${nombre}, tus datos fueron registrados.`);
  }

  console.log("üìã Datos ingresados:");
  console.log("Nombre:", nombre);
  console.log("Email:", email);
  console.log("Tel√©fono:", telefono);

  validarTelefono(telefono);
}

function validarTelefono(telefono) {
  try {
    if (!telefono.match(/^\d{7,}$/)) {
      throw new Error("N√∫mero de tel√©fono inv√°lido (m√≠nimo 7 d√≠gitos)");
    }
    console.log("‚úÖ Tel√©fono v√°lido:", telefono);
  } catch (error) {
    console.error("‚ùå Error de validaci√≥n:", error.message);
    alert("El n√∫mero de tel√©fono es incorrecto. Por favor intente nuevamente.");
  }
}

// ==============================
// üè• DATOS INSTITUCIONALES
// ==============================
function mostrarDatosHospital() {
  const { nombre, contacto, doctores } = hospital;
  console.log("üè• Hospital:", nombre);
  console.log("üìû Tel√©fono:", contacto.telefono);
  const [primero] = doctores;
  const { nombre: nombreDoc, especialidad, contacto: { correo } } = primero;
  console.log(`üë®‚Äç‚öïÔ∏è ${nombreDoc} - ${especialidad} (${correo})`);
}
